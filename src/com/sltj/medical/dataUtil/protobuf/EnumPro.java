package com.sltj.medical.dataUtil.protobuf;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.pro

public final class EnumPro {
  private EnumPro() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code eMSG_OPER_PRO}
   *
   * <pre>
   *操作类型
   * </pre>
   */
  public enum eMSG_OPER_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_ADD_PRO = 0;</code>
     *
     * <pre>
     *增加操作		
     * </pre>
     */
    EN_ADD_PRO(0, 0),
    /**
     * <code>EN_DEL_PRO = 1;</code>
     *
     * <pre>
     *删除操作
     * </pre>
     */
    EN_DEL_PRO(1, 1),
    /**
     * <code>EN_MOD_PRO = 2;</code>
     *
     * <pre>
     *修改操作
     * </pre>
     */
    EN_MOD_PRO(2, 2),
    ;

    /**
     * <code>EN_ADD_PRO = 0;</code>
     *
     * <pre>
     *增加操作		
     * </pre>
     */
    public static final int EN_ADD_PRO_VALUE = 0;
    /**
     * <code>EN_DEL_PRO = 1;</code>
     *
     * <pre>
     *删除操作
     * </pre>
     */
    public static final int EN_DEL_PRO_VALUE = 1;
    /**
     * <code>EN_MOD_PRO = 2;</code>
     *
     * <pre>
     *修改操作
     * </pre>
     */
    public static final int EN_MOD_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static eMSG_OPER_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_ADD_PRO;
        case 1: return EN_DEL_PRO;
        case 2: return EN_MOD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eMSG_OPER_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eMSG_OPER_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eMSG_OPER_PRO>() {
            public eMSG_OPER_PRO findValueByNumber(int number) {
              return eMSG_OPER_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(0);
    }

    private static final eMSG_OPER_PRO[] VALUES = values();

    public static eMSG_OPER_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eMSG_OPER_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eMSG_OPER_PRO)
  }

  /**
   * Protobuf enum {@code eUSER_ROLE_PRO}
   *
   * <pre>
   *用户角色
   * </pre>
   */
  public enum eUSER_ROLE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_ROLE_NORMAL_PRO = 0;</code>
     *
     * <pre>
     *普通用户
     * </pre>
     */
    EN_ROLE_NORMAL_PRO(0, 0),
    /**
     * <code>EN_ROLE_MANGER_PRO = 1;</code>
     *
     * <pre>
     *管理员
     * </pre>
     */
    EN_ROLE_MANGER_PRO(1, 1),
    ;

    /**
     * <code>EN_ROLE_NORMAL_PRO = 0;</code>
     *
     * <pre>
     *普通用户
     * </pre>
     */
    public static final int EN_ROLE_NORMAL_PRO_VALUE = 0;
    /**
     * <code>EN_ROLE_MANGER_PRO = 1;</code>
     *
     * <pre>
     *管理员
     * </pre>
     */
    public static final int EN_ROLE_MANGER_PRO_VALUE = 1;


    public final int getNumber() { return value; }

    public static eUSER_ROLE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_ROLE_NORMAL_PRO;
        case 1: return EN_ROLE_MANGER_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eUSER_ROLE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eUSER_ROLE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eUSER_ROLE_PRO>() {
            public eUSER_ROLE_PRO findValueByNumber(int number) {
              return eUSER_ROLE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(1);
    }

    private static final eUSER_ROLE_PRO[] VALUES = values();

    public static eUSER_ROLE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eUSER_ROLE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eUSER_ROLE_PRO)
  }

  /**
   * Protobuf enum {@code eNET_TYPE_PRO}
   *
   * <pre>
   *网络类型
   * </pre>
   */
  public enum eNET_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_NETTCP_PRO = 0;</code>
     *
     * <pre>
     *采用TCP协议传输
     * </pre>
     */
    EN_NETTCP_PRO(0, 0),
    /**
     * <code>EN_NETUDP_PRO = 1;</code>
     *
     * <pre>
     *采用UDP协议传输
     * </pre>
     */
    EN_NETUDP_PRO(1, 1),
    ;

    /**
     * <code>EN_NETTCP_PRO = 0;</code>
     *
     * <pre>
     *采用TCP协议传输
     * </pre>
     */
    public static final int EN_NETTCP_PRO_VALUE = 0;
    /**
     * <code>EN_NETUDP_PRO = 1;</code>
     *
     * <pre>
     *采用UDP协议传输
     * </pre>
     */
    public static final int EN_NETUDP_PRO_VALUE = 1;


    public final int getNumber() { return value; }

    public static eNET_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_NETTCP_PRO;
        case 1: return EN_NETUDP_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eNET_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eNET_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eNET_TYPE_PRO>() {
            public eNET_TYPE_PRO findValueByNumber(int number) {
              return eNET_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(2);
    }

    private static final eNET_TYPE_PRO[] VALUES = values();

    public static eNET_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eNET_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eNET_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eSYS_STATUS_PRO}
   *
   * <pre>
   *系统当前状态等级
   * </pre>
   */
  public enum eSYS_STATUS_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_SYSTEM_STATUS_IDLE_PRO = 0;</code>
     *
     * <pre>
     *服务器空闲
     * </pre>
     */
    EN_SYSTEM_STATUS_IDLE_PRO(0, 0),
    /**
     * <code>EN_SYSTEM_STATUS_NORMAL_PRO = 1;</code>
     *
     * <pre>
     *服务器正常
     * </pre>
     */
    EN_SYSTEM_STATUS_NORMAL_PRO(1, 1),
    /**
     * <code>EN_SYSTEM_STATUS_BUSY_PRO = 2;</code>
     *
     * <pre>
     *服务器繁忙
     * </pre>
     */
    EN_SYSTEM_STATUS_BUSY_PRO(2, 2),
    /**
     * <code>EN_SYSTEM_STATUS_DIE_PRO = 3;</code>
     *
     * <pre>
     *服务器无响应
     * </pre>
     */
    EN_SYSTEM_STATUS_DIE_PRO(3, 3),
    ;

    /**
     * <code>EN_SYSTEM_STATUS_IDLE_PRO = 0;</code>
     *
     * <pre>
     *服务器空闲
     * </pre>
     */
    public static final int EN_SYSTEM_STATUS_IDLE_PRO_VALUE = 0;
    /**
     * <code>EN_SYSTEM_STATUS_NORMAL_PRO = 1;</code>
     *
     * <pre>
     *服务器正常
     * </pre>
     */
    public static final int EN_SYSTEM_STATUS_NORMAL_PRO_VALUE = 1;
    /**
     * <code>EN_SYSTEM_STATUS_BUSY_PRO = 2;</code>
     *
     * <pre>
     *服务器繁忙
     * </pre>
     */
    public static final int EN_SYSTEM_STATUS_BUSY_PRO_VALUE = 2;
    /**
     * <code>EN_SYSTEM_STATUS_DIE_PRO = 3;</code>
     *
     * <pre>
     *服务器无响应
     * </pre>
     */
    public static final int EN_SYSTEM_STATUS_DIE_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eSYS_STATUS_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_SYSTEM_STATUS_IDLE_PRO;
        case 1: return EN_SYSTEM_STATUS_NORMAL_PRO;
        case 2: return EN_SYSTEM_STATUS_BUSY_PRO;
        case 3: return EN_SYSTEM_STATUS_DIE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eSYS_STATUS_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eSYS_STATUS_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eSYS_STATUS_PRO>() {
            public eSYS_STATUS_PRO findValueByNumber(int number) {
              return eSYS_STATUS_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(3);
    }

    private static final eSYS_STATUS_PRO[] VALUES = values();

    public static eSYS_STATUS_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eSYS_STATUS_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eSYS_STATUS_PRO)
  }

  /**
   * Protobuf enum {@code eCLIENT_TYPE_PRO}
   *
   * <pre>
   *客户端类型
   * </pre>
   */
  public enum eCLIENT_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_CLIENT_PC_PRO = 0;</code>
     *
     * <pre>
     *PC客户端
     * </pre>
     */
    EN_CLIENT_PC_PRO(0, 0),
    /**
     * <code>EN_CLIENT_WEB_PRO = 1;</code>
     *
     * <pre>
     *Web客户端
     * </pre>
     */
    EN_CLIENT_WEB_PRO(1, 1),
    /**
     * <code>EN_CLIENT_PHONE_PRO = 2;</code>
     *
     * <pre>
     *手机客户端
     * </pre>
     */
    EN_CLIENT_PHONE_PRO(2, 2),
    /**
     * <code>EN_CLIENT_PAD_PRO = 3;</code>
     *
     * <pre>
     *平板客户端
     * </pre>
     */
    EN_CLIENT_PAD_PRO(3, 3),
    ;

    /**
     * <code>EN_CLIENT_PC_PRO = 0;</code>
     *
     * <pre>
     *PC客户端
     * </pre>
     */
    public static final int EN_CLIENT_PC_PRO_VALUE = 0;
    /**
     * <code>EN_CLIENT_WEB_PRO = 1;</code>
     *
     * <pre>
     *Web客户端
     * </pre>
     */
    public static final int EN_CLIENT_WEB_PRO_VALUE = 1;
    /**
     * <code>EN_CLIENT_PHONE_PRO = 2;</code>
     *
     * <pre>
     *手机客户端
     * </pre>
     */
    public static final int EN_CLIENT_PHONE_PRO_VALUE = 2;
    /**
     * <code>EN_CLIENT_PAD_PRO = 3;</code>
     *
     * <pre>
     *平板客户端
     * </pre>
     */
    public static final int EN_CLIENT_PAD_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eCLIENT_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_CLIENT_PC_PRO;
        case 1: return EN_CLIENT_WEB_PRO;
        case 2: return EN_CLIENT_PHONE_PRO;
        case 3: return EN_CLIENT_PAD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eCLIENT_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eCLIENT_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eCLIENT_TYPE_PRO>() {
            public eCLIENT_TYPE_PRO findValueByNumber(int number) {
              return eCLIENT_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(4);
    }

    private static final eCLIENT_TYPE_PRO[] VALUES = values();

    public static eCLIENT_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eCLIENT_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eCLIENT_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eACCOUN_TTYPE_PRO}
   *
   * <pre>
   *账号类型
   * </pre>
   */
  public enum eACCOUN_TTYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_ACCOUNT_USERID_PRO = 0;</code>
     *
     * <pre>
     *账号ID类型
     * </pre>
     */
    EN_ACCOUNT_USERID_PRO(0, 0),
    /**
     * <code>EN_ACCOUNT_EMAIL_PRO = 1;</code>
     *
     * <pre>
     *邮箱类型
     * </pre>
     */
    EN_ACCOUNT_EMAIL_PRO(1, 1),
    /**
     * <code>EN_ACCOUNT_PHONE_PRO = 2;</code>
     *
     * <pre>
     *手机类型
     * </pre>
     */
    EN_ACCOUNT_PHONE_PRO(2, 2),
    /**
     * <code>EN_ACCOUNT_WEIXIN_PRO = 3;</code>
     *
     * <pre>
     *微信类型
     * </pre>
     */
    EN_ACCOUNT_WEIXIN_PRO(3, 3),
    /**
     * <code>EN_ACCOUNT_QQ_PRO = 4;</code>
     *
     * <pre>
     *QQ类型
     * </pre>
     */
    EN_ACCOUNT_QQ_PRO(4, 4),
    ;

    /**
     * <code>EN_ACCOUNT_USERID_PRO = 0;</code>
     *
     * <pre>
     *账号ID类型
     * </pre>
     */
    public static final int EN_ACCOUNT_USERID_PRO_VALUE = 0;
    /**
     * <code>EN_ACCOUNT_EMAIL_PRO = 1;</code>
     *
     * <pre>
     *邮箱类型
     * </pre>
     */
    public static final int EN_ACCOUNT_EMAIL_PRO_VALUE = 1;
    /**
     * <code>EN_ACCOUNT_PHONE_PRO = 2;</code>
     *
     * <pre>
     *手机类型
     * </pre>
     */
    public static final int EN_ACCOUNT_PHONE_PRO_VALUE = 2;
    /**
     * <code>EN_ACCOUNT_WEIXIN_PRO = 3;</code>
     *
     * <pre>
     *微信类型
     * </pre>
     */
    public static final int EN_ACCOUNT_WEIXIN_PRO_VALUE = 3;
    /**
     * <code>EN_ACCOUNT_QQ_PRO = 4;</code>
     *
     * <pre>
     *QQ类型
     * </pre>
     */
    public static final int EN_ACCOUNT_QQ_PRO_VALUE = 4;


    public final int getNumber() { return value; }

    public static eACCOUN_TTYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_ACCOUNT_USERID_PRO;
        case 1: return EN_ACCOUNT_EMAIL_PRO;
        case 2: return EN_ACCOUNT_PHONE_PRO;
        case 3: return EN_ACCOUNT_WEIXIN_PRO;
        case 4: return EN_ACCOUNT_QQ_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eACCOUN_TTYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eACCOUN_TTYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eACCOUN_TTYPE_PRO>() {
            public eACCOUN_TTYPE_PRO findValueByNumber(int number) {
              return eACCOUN_TTYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(5);
    }

    private static final eACCOUN_TTYPE_PRO[] VALUES = values();

    public static eACCOUN_TTYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eACCOUN_TTYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eACCOUN_TTYPE_PRO)
  }

  /**
   * Protobuf enum {@code eONLINE_STATUS_PRO}
   *
   * <pre>
   *在线状态
   * </pre>
   */
  public enum eONLINE_STATUS_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_STATUS_ONLINE_PRO = 0;</code>
     *
     * <pre>
     *在线
     * </pre>
     */
    EN_STATUS_ONLINE_PRO(0, 0),
    /**
     * <code>EN_STATUS_HIDE_PRO = 1;</code>
     *
     * <pre>
     *隐身
     * </pre>
     */
    EN_STATUS_HIDE_PRO(1, 1),
    /**
     * <code>EN_STATUS_OFFLINE_PRO = 2;</code>
     *
     * <pre>
     *离线
     * </pre>
     */
    EN_STATUS_OFFLINE_PRO(2, 2),
    /**
     * <code>EN_STATUS_BUSY_PRO = 3;</code>
     *
     * <pre>
     *繁忙
     * </pre>
     */
    EN_STATUS_BUSY_PRO(3, 3),
    ;

    /**
     * <code>EN_STATUS_ONLINE_PRO = 0;</code>
     *
     * <pre>
     *在线
     * </pre>
     */
    public static final int EN_STATUS_ONLINE_PRO_VALUE = 0;
    /**
     * <code>EN_STATUS_HIDE_PRO = 1;</code>
     *
     * <pre>
     *隐身
     * </pre>
     */
    public static final int EN_STATUS_HIDE_PRO_VALUE = 1;
    /**
     * <code>EN_STATUS_OFFLINE_PRO = 2;</code>
     *
     * <pre>
     *离线
     * </pre>
     */
    public static final int EN_STATUS_OFFLINE_PRO_VALUE = 2;
    /**
     * <code>EN_STATUS_BUSY_PRO = 3;</code>
     *
     * <pre>
     *繁忙
     * </pre>
     */
    public static final int EN_STATUS_BUSY_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eONLINE_STATUS_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_STATUS_ONLINE_PRO;
        case 1: return EN_STATUS_HIDE_PRO;
        case 2: return EN_STATUS_OFFLINE_PRO;
        case 3: return EN_STATUS_BUSY_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eONLINE_STATUS_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eONLINE_STATUS_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eONLINE_STATUS_PRO>() {
            public eONLINE_STATUS_PRO findValueByNumber(int number) {
              return eONLINE_STATUS_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(6);
    }

    private static final eONLINE_STATUS_PRO[] VALUES = values();

    public static eONLINE_STATUS_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eONLINE_STATUS_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eONLINE_STATUS_PRO)
  }

  /**
   * Protobuf enum {@code ePLOICIE_PRO}
   *
   * <pre>
   *验证策略
   * </pre>
   */
  public enum ePLOICIE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_PLOICIE_NO_PRO = 0;</code>
     *
     * <pre>
     *无验证策略，允许任何人加我为好友;
     * </pre>
     */
    EN_PLOICIE_NO_PRO(0, 0),
    /**
     * <code>EN_PLOICIE_ANSWER_PRO = 1;</code>
     *
     * <pre>
     *回答问题;
     * </pre>
     */
    EN_PLOICIE_ANSWER_PRO(1, 1),
    /**
     * <code>EN_PLOICIE_CHECK_PRO = 2;</code>
     *
     * <pre>
     *对端验证
     * </pre>
     */
    EN_PLOICIE_CHECK_PRO(2, 2),
    /**
     * <code>EN_PLOICIE_OTHER_PRO = 3;</code>
     *
     * <pre>
     *其他;
     * </pre>
     */
    EN_PLOICIE_OTHER_PRO(3, 3),
    ;

    /**
     * <code>EN_PLOICIE_NO_PRO = 0;</code>
     *
     * <pre>
     *无验证策略，允许任何人加我为好友;
     * </pre>
     */
    public static final int EN_PLOICIE_NO_PRO_VALUE = 0;
    /**
     * <code>EN_PLOICIE_ANSWER_PRO = 1;</code>
     *
     * <pre>
     *回答问题;
     * </pre>
     */
    public static final int EN_PLOICIE_ANSWER_PRO_VALUE = 1;
    /**
     * <code>EN_PLOICIE_CHECK_PRO = 2;</code>
     *
     * <pre>
     *对端验证
     * </pre>
     */
    public static final int EN_PLOICIE_CHECK_PRO_VALUE = 2;
    /**
     * <code>EN_PLOICIE_OTHER_PRO = 3;</code>
     *
     * <pre>
     *其他;
     * </pre>
     */
    public static final int EN_PLOICIE_OTHER_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static ePLOICIE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_PLOICIE_NO_PRO;
        case 1: return EN_PLOICIE_ANSWER_PRO;
        case 2: return EN_PLOICIE_CHECK_PRO;
        case 3: return EN_PLOICIE_OTHER_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ePLOICIE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ePLOICIE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ePLOICIE_PRO>() {
            public ePLOICIE_PRO findValueByNumber(int number) {
              return ePLOICIE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(7);
    }

    private static final ePLOICIE_PRO[] VALUES = values();

    public static ePLOICIE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ePLOICIE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ePLOICIE_PRO)
  }

  /**
   * Protobuf enum {@code eUSER_SEX_PRO}
   *
   * <pre>
   *性别
   * </pre>
   */
  public enum eUSER_SEX_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_USER_MEN_PRO = 0;</code>
     *
     * <pre>
     *男
     * </pre>
     */
    EN_USER_MEN_PRO(0, 0),
    /**
     * <code>EN_USER_WOMEN_PRO = 1;</code>
     *
     * <pre>
     *女
     * </pre>
     */
    EN_USER_WOMEN_PRO(1, 1),
    /**
     * <code>EN_USER_MID_PRO = 2;</code>
     *
     * <pre>
     *中性人;
     * </pre>
     */
    EN_USER_MID_PRO(2, 2),
    ;

    /**
     * <code>EN_USER_MEN_PRO = 0;</code>
     *
     * <pre>
     *男
     * </pre>
     */
    public static final int EN_USER_MEN_PRO_VALUE = 0;
    /**
     * <code>EN_USER_WOMEN_PRO = 1;</code>
     *
     * <pre>
     *女
     * </pre>
     */
    public static final int EN_USER_WOMEN_PRO_VALUE = 1;
    /**
     * <code>EN_USER_MID_PRO = 2;</code>
     *
     * <pre>
     *中性人;
     * </pre>
     */
    public static final int EN_USER_MID_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static eUSER_SEX_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_USER_MEN_PRO;
        case 1: return EN_USER_WOMEN_PRO;
        case 2: return EN_USER_MID_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eUSER_SEX_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eUSER_SEX_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eUSER_SEX_PRO>() {
            public eUSER_SEX_PRO findValueByNumber(int number) {
              return eUSER_SEX_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(8);
    }

    private static final eUSER_SEX_PRO[] VALUES = values();

    public static eUSER_SEX_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eUSER_SEX_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eUSER_SEX_PRO)
  }

  /**
   * Protobuf enum {@code eRECV_TYPE_PRO}
   *
   * <pre>
   *消息接收模式设置
   * </pre>
   */
  public enum eRECV_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_RECV_NURMAL_PRO = 0;</code>
     *
     * <pre>
     *接收并提示消息
     * </pre>
     */
    EN_RECV_NURMAL_PRO(0, 0),
    /**
     * <code>EN_RECV_ONLYCOUNT_PRO = 1;</code>
     *
     * <pre>
     *仅显示条数
     * </pre>
     */
    EN_RECV_ONLYCOUNT_PRO(1, 1),
    /**
     * <code>EN_RECV_ONLYOPENROOM_PRO = 2;</code>
     *
     * <pre>
     *自动弹出消息
     * </pre>
     */
    EN_RECV_ONLYOPENROOM_PRO(2, 2),
    /**
     * <code>EN_RECV_REJUEST_PRO = 3;</code>
     *
     * <pre>
     *屏蔽消息
     * </pre>
     */
    EN_RECV_REJUEST_PRO(3, 3),
    ;

    /**
     * <code>EN_RECV_NURMAL_PRO = 0;</code>
     *
     * <pre>
     *接收并提示消息
     * </pre>
     */
    public static final int EN_RECV_NURMAL_PRO_VALUE = 0;
    /**
     * <code>EN_RECV_ONLYCOUNT_PRO = 1;</code>
     *
     * <pre>
     *仅显示条数
     * </pre>
     */
    public static final int EN_RECV_ONLYCOUNT_PRO_VALUE = 1;
    /**
     * <code>EN_RECV_ONLYOPENROOM_PRO = 2;</code>
     *
     * <pre>
     *自动弹出消息
     * </pre>
     */
    public static final int EN_RECV_ONLYOPENROOM_PRO_VALUE = 2;
    /**
     * <code>EN_RECV_REJUEST_PRO = 3;</code>
     *
     * <pre>
     *屏蔽消息
     * </pre>
     */
    public static final int EN_RECV_REJUEST_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eRECV_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_RECV_NURMAL_PRO;
        case 1: return EN_RECV_ONLYCOUNT_PRO;
        case 2: return EN_RECV_ONLYOPENROOM_PRO;
        case 3: return EN_RECV_REJUEST_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eRECV_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eRECV_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eRECV_TYPE_PRO>() {
            public eRECV_TYPE_PRO findValueByNumber(int number) {
              return eRECV_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(9);
    }

    private static final eRECV_TYPE_PRO[] VALUES = values();

    public static eRECV_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eRECV_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eRECV_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eIDENTITY_CHECK_TYPE_PRO}
   *
   * <pre>
   *身份验证类型
   * </pre>
   */
  public enum eIDENTITY_CHECK_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_IDENTITY_ENBALE_PRO = 0;</code>
     *
     * <pre>
     *允许
     * </pre>
     */
    EN_IDENTITY_ENBALE_PRO(0, 0),
    /**
     * <code>EN_IDENTITY_CHECK_PRO = 1;</code>
     *
     * <pre>
     *需要验证
     * </pre>
     */
    EN_IDENTITY_CHECK_PRO(1, 1),
    /**
     * <code>EN_IDENTITY_DISABLE_PRO = 2;</code>
     *
     * <pre>
     *不允许任何人
     * </pre>
     */
    EN_IDENTITY_DISABLE_PRO(2, 2),
    ;

    /**
     * <code>EN_IDENTITY_ENBALE_PRO = 0;</code>
     *
     * <pre>
     *允许
     * </pre>
     */
    public static final int EN_IDENTITY_ENBALE_PRO_VALUE = 0;
    /**
     * <code>EN_IDENTITY_CHECK_PRO = 1;</code>
     *
     * <pre>
     *需要验证
     * </pre>
     */
    public static final int EN_IDENTITY_CHECK_PRO_VALUE = 1;
    /**
     * <code>EN_IDENTITY_DISABLE_PRO = 2;</code>
     *
     * <pre>
     *不允许任何人
     * </pre>
     */
    public static final int EN_IDENTITY_DISABLE_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static eIDENTITY_CHECK_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_IDENTITY_ENBALE_PRO;
        case 1: return EN_IDENTITY_CHECK_PRO;
        case 2: return EN_IDENTITY_DISABLE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eIDENTITY_CHECK_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eIDENTITY_CHECK_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eIDENTITY_CHECK_TYPE_PRO>() {
            public eIDENTITY_CHECK_TYPE_PRO findValueByNumber(int number) {
              return eIDENTITY_CHECK_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(10);
    }

    private static final eIDENTITY_CHECK_TYPE_PRO[] VALUES = values();

    public static eIDENTITY_CHECK_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eIDENTITY_CHECK_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eIDENTITY_CHECK_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eROLE_LEVEL_TYPE_PRO}
   *
   * <pre>
   *角色等级
   * </pre>
   */
  public enum eROLE_LEVEL_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_ROLE_LEVEL_1_PRO = 0;</code>
     *
     * <pre>
     *健康等级 一级
     * </pre>
     */
    EN_ROLE_LEVEL_1_PRO(0, 0),
    /**
     * <code>EN_ROLE_LEVEL_2_PRO = 1;</code>
     *
     * <pre>
     *健康等级 二级
     * </pre>
     */
    EN_ROLE_LEVEL_2_PRO(1, 1),
    /**
     * <code>EN_ROLE_LEVEL_3_PRO = 2;</code>
     *
     * <pre>
     *健康等级 三级
     * </pre>
     */
    EN_ROLE_LEVEL_3_PRO(2, 2),
    /**
     * <code>EN_ROLE_LEVEL_4_PRO = 3;</code>
     *
     * <pre>
     *健康等级 四级
     * </pre>
     */
    EN_ROLE_LEVEL_4_PRO(3, 3),
    /**
     * <code>EN_ROLE_LEVEL_5_PRO = 4;</code>
     *
     * <pre>
     *健康等级 五级
     * </pre>
     */
    EN_ROLE_LEVEL_5_PRO(4, 4),
    /**
     * <code>EN_ROLE_LEVEL_6_PRO = 5;</code>
     *
     * <pre>
     *健康等级 六级
     * </pre>
     */
    EN_ROLE_LEVEL_6_PRO(5, 5),
    /**
     * <code>EN_ROLE_LEVEL_7_PRO = 6;</code>
     *
     * <pre>
     *健康等级 七级
     * </pre>
     */
    EN_ROLE_LEVEL_7_PRO(6, 6),
    /**
     * <code>EN_ROLE_LEVEL_8_PRO = 7;</code>
     *
     * <pre>
     *健康等级 八级
     * </pre>
     */
    EN_ROLE_LEVEL_8_PRO(7, 7),
    /**
     * <code>EN_ROLE_LEVEL_9_PRO = 8;</code>
     *
     * <pre>
     *健康等级 九级
     * </pre>
     */
    EN_ROLE_LEVEL_9_PRO(8, 8),
    /**
     * <code>EN_ROLE_LEVEL_10_PRO = 9;</code>
     *
     * <pre>
     *健康等级 十级
     * </pre>
     */
    EN_ROLE_LEVEL_10_PRO(9, 9),
    ;

    /**
     * <code>EN_ROLE_LEVEL_1_PRO = 0;</code>
     *
     * <pre>
     *健康等级 一级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_1_PRO_VALUE = 0;
    /**
     * <code>EN_ROLE_LEVEL_2_PRO = 1;</code>
     *
     * <pre>
     *健康等级 二级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_2_PRO_VALUE = 1;
    /**
     * <code>EN_ROLE_LEVEL_3_PRO = 2;</code>
     *
     * <pre>
     *健康等级 三级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_3_PRO_VALUE = 2;
    /**
     * <code>EN_ROLE_LEVEL_4_PRO = 3;</code>
     *
     * <pre>
     *健康等级 四级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_4_PRO_VALUE = 3;
    /**
     * <code>EN_ROLE_LEVEL_5_PRO = 4;</code>
     *
     * <pre>
     *健康等级 五级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_5_PRO_VALUE = 4;
    /**
     * <code>EN_ROLE_LEVEL_6_PRO = 5;</code>
     *
     * <pre>
     *健康等级 六级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_6_PRO_VALUE = 5;
    /**
     * <code>EN_ROLE_LEVEL_7_PRO = 6;</code>
     *
     * <pre>
     *健康等级 七级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_7_PRO_VALUE = 6;
    /**
     * <code>EN_ROLE_LEVEL_8_PRO = 7;</code>
     *
     * <pre>
     *健康等级 八级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_8_PRO_VALUE = 7;
    /**
     * <code>EN_ROLE_LEVEL_9_PRO = 8;</code>
     *
     * <pre>
     *健康等级 九级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_9_PRO_VALUE = 8;
    /**
     * <code>EN_ROLE_LEVEL_10_PRO = 9;</code>
     *
     * <pre>
     *健康等级 十级
     * </pre>
     */
    public static final int EN_ROLE_LEVEL_10_PRO_VALUE = 9;


    public final int getNumber() { return value; }

    public static eROLE_LEVEL_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_ROLE_LEVEL_1_PRO;
        case 1: return EN_ROLE_LEVEL_2_PRO;
        case 2: return EN_ROLE_LEVEL_3_PRO;
        case 3: return EN_ROLE_LEVEL_4_PRO;
        case 4: return EN_ROLE_LEVEL_5_PRO;
        case 5: return EN_ROLE_LEVEL_6_PRO;
        case 6: return EN_ROLE_LEVEL_7_PRO;
        case 7: return EN_ROLE_LEVEL_8_PRO;
        case 8: return EN_ROLE_LEVEL_9_PRO;
        case 9: return EN_ROLE_LEVEL_10_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eROLE_LEVEL_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eROLE_LEVEL_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eROLE_LEVEL_TYPE_PRO>() {
            public eROLE_LEVEL_TYPE_PRO findValueByNumber(int number) {
              return eROLE_LEVEL_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(11);
    }

    private static final eROLE_LEVEL_TYPE_PRO[] VALUES = values();

    public static eROLE_LEVEL_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eROLE_LEVEL_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eROLE_LEVEL_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eAGE_RANGE_TYPE_PRO}
   *
   * <pre>
   *年龄范围
   * </pre>
   */
  public enum eAGE_RANGE_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_ALL_AGE_PRO = 0;</code>
     *
     * <pre>
     *&lt;! 不限
     * </pre>
     */
    EN_ALL_AGE_PRO(0, 0),
    /**
     * <code>EN_16TO22_PRO = 1;</code>
     *
     * <pre>
     *&lt;! 16到22
     * </pre>
     */
    EN_16TO22_PRO(1, 1),
    /**
     * <code>EN_23TO30_PRO = 2;</code>
     *
     * <pre>
     *&lt;! 23到30
     * </pre>
     */
    EN_23TO30_PRO(2, 2),
    /**
     * <code>EN_31TO40_PRO = 3;</code>
     *
     * <pre>
     *&lt;! 31到40
     * </pre>
     */
    EN_31TO40_PRO(3, 3),
    /**
     * <code>EN_OVER41_PRO = 4;</code>
     *
     * <pre>
     *&lt;! 超过41
     * </pre>
     */
    EN_OVER41_PRO(4, 4),
    ;

    /**
     * <code>EN_ALL_AGE_PRO = 0;</code>
     *
     * <pre>
     *&lt;! 不限
     * </pre>
     */
    public static final int EN_ALL_AGE_PRO_VALUE = 0;
    /**
     * <code>EN_16TO22_PRO = 1;</code>
     *
     * <pre>
     *&lt;! 16到22
     * </pre>
     */
    public static final int EN_16TO22_PRO_VALUE = 1;
    /**
     * <code>EN_23TO30_PRO = 2;</code>
     *
     * <pre>
     *&lt;! 23到30
     * </pre>
     */
    public static final int EN_23TO30_PRO_VALUE = 2;
    /**
     * <code>EN_31TO40_PRO = 3;</code>
     *
     * <pre>
     *&lt;! 31到40
     * </pre>
     */
    public static final int EN_31TO40_PRO_VALUE = 3;
    /**
     * <code>EN_OVER41_PRO = 4;</code>
     *
     * <pre>
     *&lt;! 超过41
     * </pre>
     */
    public static final int EN_OVER41_PRO_VALUE = 4;


    public final int getNumber() { return value; }

    public static eAGE_RANGE_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_ALL_AGE_PRO;
        case 1: return EN_16TO22_PRO;
        case 2: return EN_23TO30_PRO;
        case 3: return EN_31TO40_PRO;
        case 4: return EN_OVER41_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eAGE_RANGE_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eAGE_RANGE_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eAGE_RANGE_TYPE_PRO>() {
            public eAGE_RANGE_TYPE_PRO findValueByNumber(int number) {
              return eAGE_RANGE_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(12);
    }

    private static final eAGE_RANGE_TYPE_PRO[] VALUES = values();

    public static eAGE_RANGE_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eAGE_RANGE_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eAGE_RANGE_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eURL_TYPE_PRO}
   *
   * <pre>
   *URL 类型
   * </pre>
   */
  public enum eURL_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_URL_REGISTER_PRO = 0;</code>
     *
     * <pre>
     *注册
     * </pre>
     */
    EN_URL_REGISTER_PRO(0, 0),
    /**
     * <code>EN_URL_FORGETPWD_PRO = 1;</code>
     *
     * <pre>
     *忘记密码
     * </pre>
     */
    EN_URL_FORGETPWD_PRO(1, 1),
    /**
     * <code>EN_URL_MODMOVIBILE_PRO = 2;</code>
     *
     * <pre>
     *修改手机号
     * </pre>
     */
    EN_URL_MODMOVIBILE_PRO(2, 2),
    /**
     * <code>EN_URL_MODEMAIL_PRO = 3;</code>
     *
     * <pre>
     *修改邮箱
     * </pre>
     */
    EN_URL_MODEMAIL_PRO(3, 3),
    /**
     * <code>EN_URL_MODUSERINFO_PRO = 4;</code>
     *
     * <pre>
     *个人信息修改
     * </pre>
     */
    EN_URL_MODUSERINFO_PRO(4, 4),
    /**
     * <code>EN_URL_MODPWD_PRO = 5;</code>
     *
     * <pre>
     *修改密码
     * </pre>
     */
    EN_URL_MODPWD_PRO(5, 5),
    ;

    /**
     * <code>EN_URL_REGISTER_PRO = 0;</code>
     *
     * <pre>
     *注册
     * </pre>
     */
    public static final int EN_URL_REGISTER_PRO_VALUE = 0;
    /**
     * <code>EN_URL_FORGETPWD_PRO = 1;</code>
     *
     * <pre>
     *忘记密码
     * </pre>
     */
    public static final int EN_URL_FORGETPWD_PRO_VALUE = 1;
    /**
     * <code>EN_URL_MODMOVIBILE_PRO = 2;</code>
     *
     * <pre>
     *修改手机号
     * </pre>
     */
    public static final int EN_URL_MODMOVIBILE_PRO_VALUE = 2;
    /**
     * <code>EN_URL_MODEMAIL_PRO = 3;</code>
     *
     * <pre>
     *修改邮箱
     * </pre>
     */
    public static final int EN_URL_MODEMAIL_PRO_VALUE = 3;
    /**
     * <code>EN_URL_MODUSERINFO_PRO = 4;</code>
     *
     * <pre>
     *个人信息修改
     * </pre>
     */
    public static final int EN_URL_MODUSERINFO_PRO_VALUE = 4;
    /**
     * <code>EN_URL_MODPWD_PRO = 5;</code>
     *
     * <pre>
     *修改密码
     * </pre>
     */
    public static final int EN_URL_MODPWD_PRO_VALUE = 5;


    public final int getNumber() { return value; }

    public static eURL_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_URL_REGISTER_PRO;
        case 1: return EN_URL_FORGETPWD_PRO;
        case 2: return EN_URL_MODMOVIBILE_PRO;
        case 3: return EN_URL_MODEMAIL_PRO;
        case 4: return EN_URL_MODUSERINFO_PRO;
        case 5: return EN_URL_MODPWD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eURL_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eURL_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eURL_TYPE_PRO>() {
            public eURL_TYPE_PRO findValueByNumber(int number) {
              return eURL_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(13);
    }

    private static final eURL_TYPE_PRO[] VALUES = values();

    public static eURL_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eURL_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eURL_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eOPERRESULT_PRO}
   *
   * <pre>
   *操作结果信息
   * </pre>
   */
  public enum eOPERRESULT_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>E_OPER_SUCCESS_PRO = 0;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    E_OPER_SUCCESS_PRO(0, 0),
    /**
     * <code>E_OPER_AUTHFAILER_PRO = 1;</code>
     *
     * <pre>
     *认证失败
     * </pre>
     */
    E_OPER_AUTHFAILER_PRO(1, 1),
    /**
     * <code>E_OPER_NOAUTHINFO_PRO = 2;</code>
     *
     * <pre>
     *认证信息不存在
     * </pre>
     */
    E_OPER_NOAUTHINFO_PRO(2, 2),
    /**
     * <code>E_OPER_USERORPASSWD_PRO = 3;</code>
     *
     * <pre>
     *用户名或密码错误;
     * </pre>
     */
    E_OPER_USERORPASSWD_PRO(3, 3),
    /**
     * <code>E_OPER_USERNOTEXIST_PRO = 4;</code>
     *
     * <pre>
     *用户不存在;
     * </pre>
     */
    E_OPER_USERNOTEXIST_PRO(4, 4),
    /**
     * <code>E_OPER_REJEST_ADDREQ_PRO = 5;</code>
     *
     * <pre>
     *拒绝加为好友;
     * </pre>
     */
    E_OPER_REJEST_ADDREQ_PRO(5, 5),
    /**
     * <code>E_OPER_ERRORPARAM_PRO = 6;</code>
     *
     * <pre>
     *参数错误;
     * </pre>
     */
    E_OPER_ERRORPARAM_PRO(6, 6),
    /**
     * <code>E_OPER_LINKERROR_PRO = 7;</code>
     *
     * <pre>
     *链路异常;
     * </pre>
     */
    E_OPER_LINKERROR_PRO(7, 7),
    /**
     * <code>E_OPER_CGINOMEMORY_PRO = 8;</code>
     *
     * <pre>
     *内存不足
     * </pre>
     */
    E_OPER_CGINOMEMORY_PRO(8, 8),
    /**
     * <code>E_OPER_DATABASEERROR_PRO = 9;</code>
     *
     * <pre>
     *数据库操作失败;
     * </pre>
     */
    E_OPER_DATABASEERROR_PRO(9, 9),
    /**
     * <code>E_OPER_PLOICIENOEXIST_PRO = 10;</code>
     *
     * <pre>
     *没有验证策略;
     * </pre>
     */
    E_OPER_PLOICIENOEXIST_PRO(10, 10),
    /**
     * <code>E_OPER_EMPTY_PLOICIEINFO_PRO = 11;</code>
     *
     * <pre>
     *策略内容为空
     * </pre>
     */
    E_OPER_EMPTY_PLOICIEINFO_PRO(11, 11),
    /**
     * <code>E_OPER_PLOICIENOERROR_PRO = 12;</code>
     *
     * <pre>
     *验证策略不符
     * </pre>
     */
    E_OPER_PLOICIENOERROR_PRO(12, 12),
    /**
     * <code>E_OPER_NOOFFLINMSG_PRO = 13;</code>
     *
     * <pre>
     *没有离线消息;
     * </pre>
     */
    E_OPER_NOOFFLINMSG_PRO(13, 13),
    /**
     * <code>E_OPER_SERVICEBUSY_PRO = 14;</code>
     *
     * <pre>
     *服务器忙
     * </pre>
     */
    E_OPER_SERVICEBUSY_PRO(14, 14),
    /**
     * <code>E_OPER_ROOMNOTHERUSER_PRO = 15;</code>
     *
     * <pre>
     *群中没有该用户
     * </pre>
     */
    E_OPER_ROOMNOTHERUSER_PRO(15, 15),
    /**
     * <code>E_OPER_ROOMNOEXIST_PRO = 16;</code>
     *
     * <pre>
     *该群信息不存在
     * </pre>
     */
    E_OPER_ROOMNOEXIST_PRO(16, 16),
    /**
     * <code>E_OPER_MODROOMALIASFAIL_PRO = 17;</code>
     *
     * <pre>
     *修改群备注名失败
     * </pre>
     */
    E_OPER_MODROOMALIASFAIL_PRO(17, 17),
    /**
     * <code>E_OPER_ROOMNOTMANAGER_PRO = 18;</code>
     *
     * <pre>
     *非群管理员或群主;不能踢人;
     * </pre>
     */
    E_OPER_ROOMNOTMANAGER_PRO(18, 18),
    /**
     * <code>E_OPER_SETMANAGERONLYHOST_PRO = 19;</code>
     *
     * <pre>
     *仅群主能设置管理员；
     * </pre>
     */
    E_OPER_SETMANAGERONLYHOST_PRO(19, 19),
    /**
     * <code>E_OPER_ROOMHAVEMAXMANAGER_PRO = 20;</code>
     *
     * <pre>
     *管理员人数已达上限;
     * </pre>
     */
    E_OPER_ROOMHAVEMAXMANAGER_PRO(20, 20),
    /**
     * <code>E_OPER_ALREADYLOGIN_PRO = 21;</code>
     *
     * <pre>
     *该用户已登录
     * </pre>
     */
    E_OPER_ALREADYLOGIN_PRO(21, 21),
    /**
     * <code>E_OPER_SYS_CATCH_ERROR_PRO = 22;</code>
     *
     * <pre>
     *程序异常
     * </pre>
     */
    E_OPER_SYS_CATCH_ERROR_PRO(22, 22),
    /**
     * <code>E_OPER_ERROR_DBADMIN_PRO = 23;</code>
     *
     * <pre>
     *提取数据库超级用户ID失败。
     * </pre>
     */
    E_OPER_ERROR_DBADMIN_PRO(23, 23),
    /**
     * <code>E_OPER_GETRESULT_ISNULL_PRO = 24;</code>
     *
     * <pre>
     *查询结果为空
     * </pre>
     */
    E_OPER_GETRESULT_ISNULL_PRO(24, 24),
    /**
     * <code>E_OPER_OVERROOMCOUNT_PRO = 25;</code>
     *
     * <pre>
     *超过群服务器建群数目
     * </pre>
     */
    E_OPER_OVERROOMCOUNT_PRO(25, 25),
    /**
     * <code>E_OPER_NOTLOGIN_PRO = 26;</code>
     *
     * <pre>
     *用户未登录
     * </pre>
     */
    E_OPER_NOTLOGIN_PRO(26, 26),
    /**
     * <code>E_OPER_OPERTERMINATED_PRO = 27;</code>
     *
     * <pre>
     *操作被终止
     * </pre>
     */
    E_OPER_OPERTERMINATED_PRO(27, 27),
    /**
     * <code>E_OPER_CLIENTVERERROR_PRO = 28;</code>
     *
     * <pre>
     *客户端版本不正确
     * </pre>
     */
    E_OPER_CLIENTVERERROR_PRO(28, 28),
    /**
     * <code>E_OPER_HOSTREJECTLEAVE_PRO = 29;</code>
     *
     * <pre>
     *不允许群主退群
     * </pre>
     */
    E_OPER_HOSTREJECTLEAVE_PRO(29, 29),
    /**
     * <code>E_OPER_ONLYHOSTOPER_PRO = 30;</code>
     *
     * <pre>
     *只有群主可以执行此操作
     * </pre>
     */
    E_OPER_ONLYHOSTOPER_PRO(30, 30),
    /**
     * <code>E_OPER_DB_ALLOC_FAILURE_PRO = 40;</code>
     *
     * <pre>
     *内存申请失败；
     * </pre>
     */
    E_OPER_DB_ALLOC_FAILURE_PRO(31, 40),
    /**
     * <code>E_OPER_DB_DBCONN_ERROR_PRO = 41;</code>
     *
     * <pre>
     *连接数据库失败;
     * </pre>
     */
    E_OPER_DB_DBCONN_ERROR_PRO(32, 41),
    /**
     * <code>E_OPER_DB_SQLCONTENT_ERROR_PRO = 42;</code>
     *
     * <pre>
     *SQL语句有误
     * </pre>
     */
    E_OPER_DB_SQLCONTENT_ERROR_PRO(33, 42),
    /**
     * <code>E_OPER_DB_EXECSQL_ERROR_PRO = 43;</code>
     *
     * <pre>
     *执行SQL语句失败;
     * </pre>
     */
    E_OPER_DB_EXECSQL_ERROR_PRO(34, 43),
    /**
     * <code>E_OPER_DB_SPROC_ERROR_PRO = 44;</code>
     *
     * <pre>
     *存储过程调用方式有误.
     * </pre>
     */
    E_OPER_DB_SPROC_ERROR_PRO(35, 44),
    /**
     * <code>E_OPER_DB_EXECPORC_ERROR_PRO = 45;</code>
     *
     * <pre>
     *执行存储过程失败;
     * </pre>
     */
    E_OPER_DB_EXECPORC_ERROR_PRO(36, 45),
    /**
     * <code>E_OPER_DB_INVALID_PARAM_PRO = 46;</code>
     *
     * <pre>
     *参数不正确
     * </pre>
     */
    E_OPER_DB_INVALID_PARAM_PRO(37, 46),
    /**
     * <code>E_OPER_DB_FETCHRESULT_ERROR_PRO = 47;</code>
     *
     * <pre>
     *执行结果错误
     * </pre>
     */
    E_OPER_DB_FETCHRESULT_ERROR_PRO(38, 47),
    /**
     * <code>E_OPER_DB_USERORPASSWD_PRO = 50;</code>
     *
     * <pre>
     *用户名或密码错误
     * </pre>
     */
    E_OPER_DB_USERORPASSWD_PRO(39, 50),
    /**
     * <code>E_OPER_DB_USERNO_ERROR_PRO = 51;</code>
     *
     * <pre>
     *用户UserID号不正确
     * </pre>
     */
    E_OPER_DB_USERNO_ERROR_PRO(40, 51),
    /**
     * <code>E_OPER_DB_ADMIN_NOTEXIST_PRO = 52;</code>
     *
     * <pre>
     *管理员角色不存在
     * </pre>
     */
    E_OPER_DB_ADMIN_NOTEXIST_PRO(41, 52),
    /**
     * <code>E_OPER_DB_NOADMIN_PRO = 53;</code>
     *
     * <pre>
     *用户不是管理员
     * </pre>
     */
    E_OPER_DB_NOADMIN_PRO(42, 53),
    /**
     * <code>E_OPER_DB_POLICIE_FAILURE_PRO = 54;</code>
     *
     * <pre>
     *安全策略验证失败	
     * </pre>
     */
    E_OPER_DB_POLICIE_FAILURE_PRO(43, 54),
    /**
     * <code>E_OPER_DB_EMAIL_NOTEXIST_PRO = 55;</code>
     *
     * <pre>
     *用户邮箱不存在或禁用
     * </pre>
     */
    E_OPER_DB_EMAIL_NOTEXIST_PRO(44, 55),
    /**
     * <code>E_OPER_DB_KEYWORD_EXIST_PRO = 56;</code>
     *
     * <pre>
     *关键字已经存在
     * </pre>
     */
    E_OPER_DB_KEYWORD_EXIST_PRO(45, 56),
    /**
     * <code>E_OPER_DB_LOAD_MODETYPE_PRO = 57;</code>
     *
     * <pre>
     *加载模块类型不明确
     * </pre>
     */
    E_OPER_DB_LOAD_MODETYPE_PRO(46, 57),
    /**
     * <code>E_OPER_DB_NOT_FRIENDS_PRO = 58;</code>
     *
     * <pre>
     *用户不在好友列表中
     * </pre>
     */
    E_OPER_DB_NOT_FRIENDS_PRO(47, 58),
    /**
     * <code>E_OPER_DB_NOT_USERGROUP_PRO = 59;</code>
     *
     * <pre>
     *用户分组不存在
     * </pre>
     */
    E_OPER_DB_NOT_USERGROUP_PRO(48, 59),
    /**
     * <code>E_OPER_DB_MAX_ROOMMBMS_PRO = 60;</code>
     *
     * <pre>
     *群成员已达到最大数量	
     * </pre>
     */
    E_OPER_DB_MAX_ROOMMBMS_PRO(49, 60),
    /**
     * <code>E_OPER_DB_ACTIVE_TYPE_PRO = 61;</code>
     *
     * <pre>
     *用户激活类型不明确	
     * </pre>
     */
    E_OPER_DB_ACTIVE_TYPE_PRO(50, 61),
    /**
     * <code>E_OPER_DB_ACCOUNT_ACTIVE_PRO = 62;</code>
     *
     * <pre>
     *用户激活账号失败
     * </pre>
     */
    E_OPER_DB_ACCOUNT_ACTIVE_PRO(51, 62),
    /**
     * <code>E_OPER_DB_MOBILE_EXIST_PRO = 63;</code>
     *
     * <pre>
     *电话号码已经存在
     * </pre>
     */
    E_OPER_DB_MOBILE_EXIST_PRO(52, 63),
    /**
     * <code>E_OPER_DB_EMAIL_EXIST_PRO = 64;</code>
     *
     * <pre>
     *邮箱地址已经存在
     * </pre>
     */
    E_OPER_DB_EMAIL_EXIST_PRO(53, 64),
    /**
     * <code>E_OPER_DB_REGISTER_TYPE_PRO = 65;</code>
     *
     * <pre>
     *用户注册类型不明确
     * </pre>
     */
    E_OPER_DB_REGISTER_TYPE_PRO(54, 65),
    /**
     * <code>E_OPER_DB_EXIST_FRIENDS_PRO = 66;</code>
     *
     * <pre>
     *用户已在好友列表中
     * </pre>
     */
    E_OPER_DB_EXIST_FRIENDS_PRO(55, 66),
    /**
     * <code>E_OPER_DB_USERID_ISUSED_PRO = 67;</code>
     *
     * <pre>
     *该UserID已经被使用
     * </pre>
     */
    E_OPER_DB_USERID_ISUSED_PRO(56, 67),
    /**
     * <code>E_OPER_DB_GETWAY_ISUSED_PRO = 68;</code>
     *
     * <pre>
     *网关ID已经被使用
     * </pre>
     */
    E_OPER_DB_GETWAY_ISUSED_PRO(57, 68),
    /**
     * <code>E_OPER_DB_USER_HADROOMS_PRO = 69;</code>
     *
     * <pre>
     *用户已经在房间列表中
     * </pre>
     */
    E_OPER_DB_USER_HADROOMS_PRO(58, 69),
    /**
     * <code>E_OPER_DB_USERINFO_REJECT_PRO = 70;</code>
     *
     * <pre>
     *用户已设置查看权限
     * </pre>
     */
    E_OPER_DB_USERINFO_REJECT_PRO(59, 70),
    ;

    /**
     * <code>E_OPER_SUCCESS_PRO = 0;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    public static final int E_OPER_SUCCESS_PRO_VALUE = 0;
    /**
     * <code>E_OPER_AUTHFAILER_PRO = 1;</code>
     *
     * <pre>
     *认证失败
     * </pre>
     */
    public static final int E_OPER_AUTHFAILER_PRO_VALUE = 1;
    /**
     * <code>E_OPER_NOAUTHINFO_PRO = 2;</code>
     *
     * <pre>
     *认证信息不存在
     * </pre>
     */
    public static final int E_OPER_NOAUTHINFO_PRO_VALUE = 2;
    /**
     * <code>E_OPER_USERORPASSWD_PRO = 3;</code>
     *
     * <pre>
     *用户名或密码错误;
     * </pre>
     */
    public static final int E_OPER_USERORPASSWD_PRO_VALUE = 3;
    /**
     * <code>E_OPER_USERNOTEXIST_PRO = 4;</code>
     *
     * <pre>
     *用户不存在;
     * </pre>
     */
    public static final int E_OPER_USERNOTEXIST_PRO_VALUE = 4;
    /**
     * <code>E_OPER_REJEST_ADDREQ_PRO = 5;</code>
     *
     * <pre>
     *拒绝加为好友;
     * </pre>
     */
    public static final int E_OPER_REJEST_ADDREQ_PRO_VALUE = 5;
    /**
     * <code>E_OPER_ERRORPARAM_PRO = 6;</code>
     *
     * <pre>
     *参数错误;
     * </pre>
     */
    public static final int E_OPER_ERRORPARAM_PRO_VALUE = 6;
    /**
     * <code>E_OPER_LINKERROR_PRO = 7;</code>
     *
     * <pre>
     *链路异常;
     * </pre>
     */
    public static final int E_OPER_LINKERROR_PRO_VALUE = 7;
    /**
     * <code>E_OPER_CGINOMEMORY_PRO = 8;</code>
     *
     * <pre>
     *内存不足
     * </pre>
     */
    public static final int E_OPER_CGINOMEMORY_PRO_VALUE = 8;
    /**
     * <code>E_OPER_DATABASEERROR_PRO = 9;</code>
     *
     * <pre>
     *数据库操作失败;
     * </pre>
     */
    public static final int E_OPER_DATABASEERROR_PRO_VALUE = 9;
    /**
     * <code>E_OPER_PLOICIENOEXIST_PRO = 10;</code>
     *
     * <pre>
     *没有验证策略;
     * </pre>
     */
    public static final int E_OPER_PLOICIENOEXIST_PRO_VALUE = 10;
    /**
     * <code>E_OPER_EMPTY_PLOICIEINFO_PRO = 11;</code>
     *
     * <pre>
     *策略内容为空
     * </pre>
     */
    public static final int E_OPER_EMPTY_PLOICIEINFO_PRO_VALUE = 11;
    /**
     * <code>E_OPER_PLOICIENOERROR_PRO = 12;</code>
     *
     * <pre>
     *验证策略不符
     * </pre>
     */
    public static final int E_OPER_PLOICIENOERROR_PRO_VALUE = 12;
    /**
     * <code>E_OPER_NOOFFLINMSG_PRO = 13;</code>
     *
     * <pre>
     *没有离线消息;
     * </pre>
     */
    public static final int E_OPER_NOOFFLINMSG_PRO_VALUE = 13;
    /**
     * <code>E_OPER_SERVICEBUSY_PRO = 14;</code>
     *
     * <pre>
     *服务器忙
     * </pre>
     */
    public static final int E_OPER_SERVICEBUSY_PRO_VALUE = 14;
    /**
     * <code>E_OPER_ROOMNOTHERUSER_PRO = 15;</code>
     *
     * <pre>
     *群中没有该用户
     * </pre>
     */
    public static final int E_OPER_ROOMNOTHERUSER_PRO_VALUE = 15;
    /**
     * <code>E_OPER_ROOMNOEXIST_PRO = 16;</code>
     *
     * <pre>
     *该群信息不存在
     * </pre>
     */
    public static final int E_OPER_ROOMNOEXIST_PRO_VALUE = 16;
    /**
     * <code>E_OPER_MODROOMALIASFAIL_PRO = 17;</code>
     *
     * <pre>
     *修改群备注名失败
     * </pre>
     */
    public static final int E_OPER_MODROOMALIASFAIL_PRO_VALUE = 17;
    /**
     * <code>E_OPER_ROOMNOTMANAGER_PRO = 18;</code>
     *
     * <pre>
     *非群管理员或群主;不能踢人;
     * </pre>
     */
    public static final int E_OPER_ROOMNOTMANAGER_PRO_VALUE = 18;
    /**
     * <code>E_OPER_SETMANAGERONLYHOST_PRO = 19;</code>
     *
     * <pre>
     *仅群主能设置管理员；
     * </pre>
     */
    public static final int E_OPER_SETMANAGERONLYHOST_PRO_VALUE = 19;
    /**
     * <code>E_OPER_ROOMHAVEMAXMANAGER_PRO = 20;</code>
     *
     * <pre>
     *管理员人数已达上限;
     * </pre>
     */
    public static final int E_OPER_ROOMHAVEMAXMANAGER_PRO_VALUE = 20;
    /**
     * <code>E_OPER_ALREADYLOGIN_PRO = 21;</code>
     *
     * <pre>
     *该用户已登录
     * </pre>
     */
    public static final int E_OPER_ALREADYLOGIN_PRO_VALUE = 21;
    /**
     * <code>E_OPER_SYS_CATCH_ERROR_PRO = 22;</code>
     *
     * <pre>
     *程序异常
     * </pre>
     */
    public static final int E_OPER_SYS_CATCH_ERROR_PRO_VALUE = 22;
    /**
     * <code>E_OPER_ERROR_DBADMIN_PRO = 23;</code>
     *
     * <pre>
     *提取数据库超级用户ID失败。
     * </pre>
     */
    public static final int E_OPER_ERROR_DBADMIN_PRO_VALUE = 23;
    /**
     * <code>E_OPER_GETRESULT_ISNULL_PRO = 24;</code>
     *
     * <pre>
     *查询结果为空
     * </pre>
     */
    public static final int E_OPER_GETRESULT_ISNULL_PRO_VALUE = 24;
    /**
     * <code>E_OPER_OVERROOMCOUNT_PRO = 25;</code>
     *
     * <pre>
     *超过群服务器建群数目
     * </pre>
     */
    public static final int E_OPER_OVERROOMCOUNT_PRO_VALUE = 25;
    /**
     * <code>E_OPER_NOTLOGIN_PRO = 26;</code>
     *
     * <pre>
     *用户未登录
     * </pre>
     */
    public static final int E_OPER_NOTLOGIN_PRO_VALUE = 26;
    /**
     * <code>E_OPER_OPERTERMINATED_PRO = 27;</code>
     *
     * <pre>
     *操作被终止
     * </pre>
     */
    public static final int E_OPER_OPERTERMINATED_PRO_VALUE = 27;
    /**
     * <code>E_OPER_CLIENTVERERROR_PRO = 28;</code>
     *
     * <pre>
     *客户端版本不正确
     * </pre>
     */
    public static final int E_OPER_CLIENTVERERROR_PRO_VALUE = 28;
    /**
     * <code>E_OPER_HOSTREJECTLEAVE_PRO = 29;</code>
     *
     * <pre>
     *不允许群主退群
     * </pre>
     */
    public static final int E_OPER_HOSTREJECTLEAVE_PRO_VALUE = 29;
    /**
     * <code>E_OPER_ONLYHOSTOPER_PRO = 30;</code>
     *
     * <pre>
     *只有群主可以执行此操作
     * </pre>
     */
    public static final int E_OPER_ONLYHOSTOPER_PRO_VALUE = 30;
    /**
     * <code>E_OPER_DB_ALLOC_FAILURE_PRO = 40;</code>
     *
     * <pre>
     *内存申请失败；
     * </pre>
     */
    public static final int E_OPER_DB_ALLOC_FAILURE_PRO_VALUE = 40;
    /**
     * <code>E_OPER_DB_DBCONN_ERROR_PRO = 41;</code>
     *
     * <pre>
     *连接数据库失败;
     * </pre>
     */
    public static final int E_OPER_DB_DBCONN_ERROR_PRO_VALUE = 41;
    /**
     * <code>E_OPER_DB_SQLCONTENT_ERROR_PRO = 42;</code>
     *
     * <pre>
     *SQL语句有误
     * </pre>
     */
    public static final int E_OPER_DB_SQLCONTENT_ERROR_PRO_VALUE = 42;
    /**
     * <code>E_OPER_DB_EXECSQL_ERROR_PRO = 43;</code>
     *
     * <pre>
     *执行SQL语句失败;
     * </pre>
     */
    public static final int E_OPER_DB_EXECSQL_ERROR_PRO_VALUE = 43;
    /**
     * <code>E_OPER_DB_SPROC_ERROR_PRO = 44;</code>
     *
     * <pre>
     *存储过程调用方式有误.
     * </pre>
     */
    public static final int E_OPER_DB_SPROC_ERROR_PRO_VALUE = 44;
    /**
     * <code>E_OPER_DB_EXECPORC_ERROR_PRO = 45;</code>
     *
     * <pre>
     *执行存储过程失败;
     * </pre>
     */
    public static final int E_OPER_DB_EXECPORC_ERROR_PRO_VALUE = 45;
    /**
     * <code>E_OPER_DB_INVALID_PARAM_PRO = 46;</code>
     *
     * <pre>
     *参数不正确
     * </pre>
     */
    public static final int E_OPER_DB_INVALID_PARAM_PRO_VALUE = 46;
    /**
     * <code>E_OPER_DB_FETCHRESULT_ERROR_PRO = 47;</code>
     *
     * <pre>
     *执行结果错误
     * </pre>
     */
    public static final int E_OPER_DB_FETCHRESULT_ERROR_PRO_VALUE = 47;
    /**
     * <code>E_OPER_DB_USERORPASSWD_PRO = 50;</code>
     *
     * <pre>
     *用户名或密码错误
     * </pre>
     */
    public static final int E_OPER_DB_USERORPASSWD_PRO_VALUE = 50;
    /**
     * <code>E_OPER_DB_USERNO_ERROR_PRO = 51;</code>
     *
     * <pre>
     *用户UserID号不正确
     * </pre>
     */
    public static final int E_OPER_DB_USERNO_ERROR_PRO_VALUE = 51;
    /**
     * <code>E_OPER_DB_ADMIN_NOTEXIST_PRO = 52;</code>
     *
     * <pre>
     *管理员角色不存在
     * </pre>
     */
    public static final int E_OPER_DB_ADMIN_NOTEXIST_PRO_VALUE = 52;
    /**
     * <code>E_OPER_DB_NOADMIN_PRO = 53;</code>
     *
     * <pre>
     *用户不是管理员
     * </pre>
     */
    public static final int E_OPER_DB_NOADMIN_PRO_VALUE = 53;
    /**
     * <code>E_OPER_DB_POLICIE_FAILURE_PRO = 54;</code>
     *
     * <pre>
     *安全策略验证失败	
     * </pre>
     */
    public static final int E_OPER_DB_POLICIE_FAILURE_PRO_VALUE = 54;
    /**
     * <code>E_OPER_DB_EMAIL_NOTEXIST_PRO = 55;</code>
     *
     * <pre>
     *用户邮箱不存在或禁用
     * </pre>
     */
    public static final int E_OPER_DB_EMAIL_NOTEXIST_PRO_VALUE = 55;
    /**
     * <code>E_OPER_DB_KEYWORD_EXIST_PRO = 56;</code>
     *
     * <pre>
     *关键字已经存在
     * </pre>
     */
    public static final int E_OPER_DB_KEYWORD_EXIST_PRO_VALUE = 56;
    /**
     * <code>E_OPER_DB_LOAD_MODETYPE_PRO = 57;</code>
     *
     * <pre>
     *加载模块类型不明确
     * </pre>
     */
    public static final int E_OPER_DB_LOAD_MODETYPE_PRO_VALUE = 57;
    /**
     * <code>E_OPER_DB_NOT_FRIENDS_PRO = 58;</code>
     *
     * <pre>
     *用户不在好友列表中
     * </pre>
     */
    public static final int E_OPER_DB_NOT_FRIENDS_PRO_VALUE = 58;
    /**
     * <code>E_OPER_DB_NOT_USERGROUP_PRO = 59;</code>
     *
     * <pre>
     *用户分组不存在
     * </pre>
     */
    public static final int E_OPER_DB_NOT_USERGROUP_PRO_VALUE = 59;
    /**
     * <code>E_OPER_DB_MAX_ROOMMBMS_PRO = 60;</code>
     *
     * <pre>
     *群成员已达到最大数量	
     * </pre>
     */
    public static final int E_OPER_DB_MAX_ROOMMBMS_PRO_VALUE = 60;
    /**
     * <code>E_OPER_DB_ACTIVE_TYPE_PRO = 61;</code>
     *
     * <pre>
     *用户激活类型不明确	
     * </pre>
     */
    public static final int E_OPER_DB_ACTIVE_TYPE_PRO_VALUE = 61;
    /**
     * <code>E_OPER_DB_ACCOUNT_ACTIVE_PRO = 62;</code>
     *
     * <pre>
     *用户激活账号失败
     * </pre>
     */
    public static final int E_OPER_DB_ACCOUNT_ACTIVE_PRO_VALUE = 62;
    /**
     * <code>E_OPER_DB_MOBILE_EXIST_PRO = 63;</code>
     *
     * <pre>
     *电话号码已经存在
     * </pre>
     */
    public static final int E_OPER_DB_MOBILE_EXIST_PRO_VALUE = 63;
    /**
     * <code>E_OPER_DB_EMAIL_EXIST_PRO = 64;</code>
     *
     * <pre>
     *邮箱地址已经存在
     * </pre>
     */
    public static final int E_OPER_DB_EMAIL_EXIST_PRO_VALUE = 64;
    /**
     * <code>E_OPER_DB_REGISTER_TYPE_PRO = 65;</code>
     *
     * <pre>
     *用户注册类型不明确
     * </pre>
     */
    public static final int E_OPER_DB_REGISTER_TYPE_PRO_VALUE = 65;
    /**
     * <code>E_OPER_DB_EXIST_FRIENDS_PRO = 66;</code>
     *
     * <pre>
     *用户已在好友列表中
     * </pre>
     */
    public static final int E_OPER_DB_EXIST_FRIENDS_PRO_VALUE = 66;
    /**
     * <code>E_OPER_DB_USERID_ISUSED_PRO = 67;</code>
     *
     * <pre>
     *该UserID已经被使用
     * </pre>
     */
    public static final int E_OPER_DB_USERID_ISUSED_PRO_VALUE = 67;
    /**
     * <code>E_OPER_DB_GETWAY_ISUSED_PRO = 68;</code>
     *
     * <pre>
     *网关ID已经被使用
     * </pre>
     */
    public static final int E_OPER_DB_GETWAY_ISUSED_PRO_VALUE = 68;
    /**
     * <code>E_OPER_DB_USER_HADROOMS_PRO = 69;</code>
     *
     * <pre>
     *用户已经在房间列表中
     * </pre>
     */
    public static final int E_OPER_DB_USER_HADROOMS_PRO_VALUE = 69;
    /**
     * <code>E_OPER_DB_USERINFO_REJECT_PRO = 70;</code>
     *
     * <pre>
     *用户已设置查看权限
     * </pre>
     */
    public static final int E_OPER_DB_USERINFO_REJECT_PRO_VALUE = 70;


    public final int getNumber() { return value; }

    public static eOPERRESULT_PRO valueOf(int value) {
      switch (value) {
        case 0: return E_OPER_SUCCESS_PRO;
        case 1: return E_OPER_AUTHFAILER_PRO;
        case 2: return E_OPER_NOAUTHINFO_PRO;
        case 3: return E_OPER_USERORPASSWD_PRO;
        case 4: return E_OPER_USERNOTEXIST_PRO;
        case 5: return E_OPER_REJEST_ADDREQ_PRO;
        case 6: return E_OPER_ERRORPARAM_PRO;
        case 7: return E_OPER_LINKERROR_PRO;
        case 8: return E_OPER_CGINOMEMORY_PRO;
        case 9: return E_OPER_DATABASEERROR_PRO;
        case 10: return E_OPER_PLOICIENOEXIST_PRO;
        case 11: return E_OPER_EMPTY_PLOICIEINFO_PRO;
        case 12: return E_OPER_PLOICIENOERROR_PRO;
        case 13: return E_OPER_NOOFFLINMSG_PRO;
        case 14: return E_OPER_SERVICEBUSY_PRO;
        case 15: return E_OPER_ROOMNOTHERUSER_PRO;
        case 16: return E_OPER_ROOMNOEXIST_PRO;
        case 17: return E_OPER_MODROOMALIASFAIL_PRO;
        case 18: return E_OPER_ROOMNOTMANAGER_PRO;
        case 19: return E_OPER_SETMANAGERONLYHOST_PRO;
        case 20: return E_OPER_ROOMHAVEMAXMANAGER_PRO;
        case 21: return E_OPER_ALREADYLOGIN_PRO;
        case 22: return E_OPER_SYS_CATCH_ERROR_PRO;
        case 23: return E_OPER_ERROR_DBADMIN_PRO;
        case 24: return E_OPER_GETRESULT_ISNULL_PRO;
        case 25: return E_OPER_OVERROOMCOUNT_PRO;
        case 26: return E_OPER_NOTLOGIN_PRO;
        case 27: return E_OPER_OPERTERMINATED_PRO;
        case 28: return E_OPER_CLIENTVERERROR_PRO;
        case 29: return E_OPER_HOSTREJECTLEAVE_PRO;
        case 30: return E_OPER_ONLYHOSTOPER_PRO;
        case 40: return E_OPER_DB_ALLOC_FAILURE_PRO;
        case 41: return E_OPER_DB_DBCONN_ERROR_PRO;
        case 42: return E_OPER_DB_SQLCONTENT_ERROR_PRO;
        case 43: return E_OPER_DB_EXECSQL_ERROR_PRO;
        case 44: return E_OPER_DB_SPROC_ERROR_PRO;
        case 45: return E_OPER_DB_EXECPORC_ERROR_PRO;
        case 46: return E_OPER_DB_INVALID_PARAM_PRO;
        case 47: return E_OPER_DB_FETCHRESULT_ERROR_PRO;
        case 50: return E_OPER_DB_USERORPASSWD_PRO;
        case 51: return E_OPER_DB_USERNO_ERROR_PRO;
        case 52: return E_OPER_DB_ADMIN_NOTEXIST_PRO;
        case 53: return E_OPER_DB_NOADMIN_PRO;
        case 54: return E_OPER_DB_POLICIE_FAILURE_PRO;
        case 55: return E_OPER_DB_EMAIL_NOTEXIST_PRO;
        case 56: return E_OPER_DB_KEYWORD_EXIST_PRO;
        case 57: return E_OPER_DB_LOAD_MODETYPE_PRO;
        case 58: return E_OPER_DB_NOT_FRIENDS_PRO;
        case 59: return E_OPER_DB_NOT_USERGROUP_PRO;
        case 60: return E_OPER_DB_MAX_ROOMMBMS_PRO;
        case 61: return E_OPER_DB_ACTIVE_TYPE_PRO;
        case 62: return E_OPER_DB_ACCOUNT_ACTIVE_PRO;
        case 63: return E_OPER_DB_MOBILE_EXIST_PRO;
        case 64: return E_OPER_DB_EMAIL_EXIST_PRO;
        case 65: return E_OPER_DB_REGISTER_TYPE_PRO;
        case 66: return E_OPER_DB_EXIST_FRIENDS_PRO;
        case 67: return E_OPER_DB_USERID_ISUSED_PRO;
        case 68: return E_OPER_DB_GETWAY_ISUSED_PRO;
        case 69: return E_OPER_DB_USER_HADROOMS_PRO;
        case 70: return E_OPER_DB_USERINFO_REJECT_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eOPERRESULT_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eOPERRESULT_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eOPERRESULT_PRO>() {
            public eOPERRESULT_PRO findValueByNumber(int number) {
              return eOPERRESULT_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(14);
    }

    private static final eOPERRESULT_PRO[] VALUES = values();

    public static eOPERRESULT_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eOPERRESULT_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eOPERRESULT_PRO)
  }

  /**
   * Protobuf enum {@code eLOGIN_TYPE_PRO}
   *
   * <pre>
   *账号类型
   * </pre>
   */
  public enum eLOGIN_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_LOGIN_ID_PRO = 0;</code>
     *
     * <pre>
     *ID 登录
     * </pre>
     */
    EN_LOGIN_ID_PRO(0, 0),
    /**
     * <code>EN_LOGIN_EMAIL_PRO = 1;</code>
     *
     * <pre>
     *邮箱密码登录
     * </pre>
     */
    EN_LOGIN_EMAIL_PRO(1, 1),
    /**
     * <code>EN_LOGIN_PHONE_PRO = 2;</code>
     *
     * <pre>
     *手机密码登录
     * </pre>
     */
    EN_LOGIN_PHONE_PRO(2, 2),
    /**
     * <code>EN_LOGIN_PHONE_CODE_PRO = 3;</code>
     *
     * <pre>
     *手机验证码登录
     * </pre>
     */
    EN_LOGIN_PHONE_CODE_PRO(3, 3),
    ;

    /**
     * <code>EN_LOGIN_ID_PRO = 0;</code>
     *
     * <pre>
     *ID 登录
     * </pre>
     */
    public static final int EN_LOGIN_ID_PRO_VALUE = 0;
    /**
     * <code>EN_LOGIN_EMAIL_PRO = 1;</code>
     *
     * <pre>
     *邮箱密码登录
     * </pre>
     */
    public static final int EN_LOGIN_EMAIL_PRO_VALUE = 1;
    /**
     * <code>EN_LOGIN_PHONE_PRO = 2;</code>
     *
     * <pre>
     *手机密码登录
     * </pre>
     */
    public static final int EN_LOGIN_PHONE_PRO_VALUE = 2;
    /**
     * <code>EN_LOGIN_PHONE_CODE_PRO = 3;</code>
     *
     * <pre>
     *手机验证码登录
     * </pre>
     */
    public static final int EN_LOGIN_PHONE_CODE_PRO_VALUE = 3;


    public final int getNumber() { return value; }

    public static eLOGIN_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_LOGIN_ID_PRO;
        case 1: return EN_LOGIN_EMAIL_PRO;
        case 2: return EN_LOGIN_PHONE_PRO;
        case 3: return EN_LOGIN_PHONE_CODE_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eLOGIN_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eLOGIN_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eLOGIN_TYPE_PRO>() {
            public eLOGIN_TYPE_PRO findValueByNumber(int number) {
              return eLOGIN_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(15);
    }

    private static final eLOGIN_TYPE_PRO[] VALUES = values();

    public static eLOGIN_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eLOGIN_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eLOGIN_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eNEWS_PRO}
   *
   * <pre>
   *资讯类型
   * </pre>
   */
  public enum eNEWS_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_NEWS_ACCURATE_PRO = 0;</code>
     *
     * <pre>
     *精准医疗;
     * </pre>
     */
    EN_NEWS_ACCURATE_PRO(0, 0),
    /**
     * <code>EN_NEWS_BIOTECH_PRO = 1;</code>
     *
     * <pre>
     *生物科技;
     * </pre>
     */
    EN_NEWS_BIOTECH_PRO(1, 1),
    /**
     * <code>EN_NEWS_HEALTH_PRO = 2;</code>
     *
     * <pre>
     *健康美学;
     * </pre>
     */
    EN_NEWS_HEALTH_PRO(2, 2),
    /**
     * <code>EN_NEWS_NCD_CONTRAL_PRO = 3;</code>
     *
     * <pre>
     *慢病控制;
     * </pre>
     */
    EN_NEWS_NCD_CONTRAL_PRO(3, 3),
    /**
     * <code>EN_NEWS_OTHER_PRO = 4;</code>
     *
     * <pre>
     *其它;
     * </pre>
     */
    EN_NEWS_OTHER_PRO(4, 4),
    ;

    /**
     * <code>EN_NEWS_ACCURATE_PRO = 0;</code>
     *
     * <pre>
     *精准医疗;
     * </pre>
     */
    public static final int EN_NEWS_ACCURATE_PRO_VALUE = 0;
    /**
     * <code>EN_NEWS_BIOTECH_PRO = 1;</code>
     *
     * <pre>
     *生物科技;
     * </pre>
     */
    public static final int EN_NEWS_BIOTECH_PRO_VALUE = 1;
    /**
     * <code>EN_NEWS_HEALTH_PRO = 2;</code>
     *
     * <pre>
     *健康美学;
     * </pre>
     */
    public static final int EN_NEWS_HEALTH_PRO_VALUE = 2;
    /**
     * <code>EN_NEWS_NCD_CONTRAL_PRO = 3;</code>
     *
     * <pre>
     *慢病控制;
     * </pre>
     */
    public static final int EN_NEWS_NCD_CONTRAL_PRO_VALUE = 3;
    /**
     * <code>EN_NEWS_OTHER_PRO = 4;</code>
     *
     * <pre>
     *其它;
     * </pre>
     */
    public static final int EN_NEWS_OTHER_PRO_VALUE = 4;


    public final int getNumber() { return value; }

    public static eNEWS_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_NEWS_ACCURATE_PRO;
        case 1: return EN_NEWS_BIOTECH_PRO;
        case 2: return EN_NEWS_HEALTH_PRO;
        case 3: return EN_NEWS_NCD_CONTRAL_PRO;
        case 4: return EN_NEWS_OTHER_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eNEWS_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eNEWS_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eNEWS_PRO>() {
            public eNEWS_PRO findValueByNumber(int number) {
              return eNEWS_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(16);
    }

    private static final eNEWS_PRO[] VALUES = values();

    public static eNEWS_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eNEWS_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eNEWS_PRO)
  }

  /**
   * Protobuf enum {@code eSERVER_TYPE_PRO}
   *
   * <pre>
   *服务器类型
   * </pre>
   */
  public enum eSERVER_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_SERVER_TYPE_CMD_PRO = 0;</code>
     *
     * <pre>
     *命令服务器，长连接用来处理命令的
     * </pre>
     */
    EN_SERVER_TYPE_CMD_PRO(0, 0),
    /**
     * <code>EN_SERVER_TYPE_FTP_PRO = 1;</code>
     *
     * <pre>
     *FTP服务器，用来上传文件，下载文件的
     * </pre>
     */
    EN_SERVER_TYPE_FTP_PRO(1, 1),
    ;

    /**
     * <code>EN_SERVER_TYPE_CMD_PRO = 0;</code>
     *
     * <pre>
     *命令服务器，长连接用来处理命令的
     * </pre>
     */
    public static final int EN_SERVER_TYPE_CMD_PRO_VALUE = 0;
    /**
     * <code>EN_SERVER_TYPE_FTP_PRO = 1;</code>
     *
     * <pre>
     *FTP服务器，用来上传文件，下载文件的
     * </pre>
     */
    public static final int EN_SERVER_TYPE_FTP_PRO_VALUE = 1;


    public final int getNumber() { return value; }

    public static eSERVER_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_SERVER_TYPE_CMD_PRO;
        case 1: return EN_SERVER_TYPE_FTP_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eSERVER_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eSERVER_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eSERVER_TYPE_PRO>() {
            public eSERVER_TYPE_PRO findValueByNumber(int number) {
              return eSERVER_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(17);
    }

    private static final eSERVER_TYPE_PRO[] VALUES = values();

    public static eSERVER_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eSERVER_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eSERVER_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eDOCTOR_SPECIA_TYPE_PRO}
   *
   * <pre>
   *医生擅长专科类型
   * </pre>
   */
  public enum eDOCTOR_SPECIA_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_ALL_SPECIA_PRO = 0;</code>
     *
     * <pre>
     *所有的
     * </pre>
     */
    EN_ALL_SPECIA_PRO(0, 0),
    /**
     * <code>EN_ERDUO_PRO = 1;</code>
     *
     * <pre>
     *耳朵，耳科
     * </pre>
     */
    EN_ERDUO_PRO(1, 1),
    /**
     * <code>EN_YANJIN_PRO = 2;</code>
     *
     * <pre>
     *眼睛，眼科
     * </pre>
     */
    EN_YANJIN_PRO(2, 2),
    /**
     * <code>EN_HOULONG_PRO = 3;</code>
     *
     * <pre>
     *喉咙，喉科
     * </pre>
     */
    EN_HOULONG_PRO(3, 3),
    /**
     * <code>EN_BIZI_PRO = 4;</code>
     *
     * <pre>
     *鼻子，鼻科
     * </pre>
     */
    EN_BIZI_PRO(4, 4),
    ;

    /**
     * <code>EN_ALL_SPECIA_PRO = 0;</code>
     *
     * <pre>
     *所有的
     * </pre>
     */
    public static final int EN_ALL_SPECIA_PRO_VALUE = 0;
    /**
     * <code>EN_ERDUO_PRO = 1;</code>
     *
     * <pre>
     *耳朵，耳科
     * </pre>
     */
    public static final int EN_ERDUO_PRO_VALUE = 1;
    /**
     * <code>EN_YANJIN_PRO = 2;</code>
     *
     * <pre>
     *眼睛，眼科
     * </pre>
     */
    public static final int EN_YANJIN_PRO_VALUE = 2;
    /**
     * <code>EN_HOULONG_PRO = 3;</code>
     *
     * <pre>
     *喉咙，喉科
     * </pre>
     */
    public static final int EN_HOULONG_PRO_VALUE = 3;
    /**
     * <code>EN_BIZI_PRO = 4;</code>
     *
     * <pre>
     *鼻子，鼻科
     * </pre>
     */
    public static final int EN_BIZI_PRO_VALUE = 4;


    public final int getNumber() { return value; }

    public static eDOCTOR_SPECIA_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_ALL_SPECIA_PRO;
        case 1: return EN_ERDUO_PRO;
        case 2: return EN_YANJIN_PRO;
        case 3: return EN_HOULONG_PRO;
        case 4: return EN_BIZI_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eDOCTOR_SPECIA_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eDOCTOR_SPECIA_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eDOCTOR_SPECIA_TYPE_PRO>() {
            public eDOCTOR_SPECIA_TYPE_PRO findValueByNumber(int number) {
              return eDOCTOR_SPECIA_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(18);
    }

    private static final eDOCTOR_SPECIA_TYPE_PRO[] VALUES = values();

    public static eDOCTOR_SPECIA_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eDOCTOR_SPECIA_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eDOCTOR_SPECIA_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code eMESSAGE_TYPE_PRO}
   *
   * <pre>
   *消息类型
   * </pre>
   */
  public enum eMESSAGE_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_TEXT_MSG_PRO = 0;</code>
     *
     * <pre>
     *文本类型
     * </pre>
     */
    EN_TEXT_MSG_PRO(0, 0),
    /**
     * <code>EN_AUDIO_MSG_PRO = 1;</code>
     *
     * <pre>
     *音频类型
     * </pre>
     */
    EN_AUDIO_MSG_PRO(1, 1),
    /**
     * <code>EN_VIDEO_MSG_PRO = 2;</code>
     *
     * <pre>
     *视频类型
     * </pre>
     */
    EN_VIDEO_MSG_PRO(2, 2),
    ;

    /**
     * <code>EN_TEXT_MSG_PRO = 0;</code>
     *
     * <pre>
     *文本类型
     * </pre>
     */
    public static final int EN_TEXT_MSG_PRO_VALUE = 0;
    /**
     * <code>EN_AUDIO_MSG_PRO = 1;</code>
     *
     * <pre>
     *音频类型
     * </pre>
     */
    public static final int EN_AUDIO_MSG_PRO_VALUE = 1;
    /**
     * <code>EN_VIDEO_MSG_PRO = 2;</code>
     *
     * <pre>
     *视频类型
     * </pre>
     */
    public static final int EN_VIDEO_MSG_PRO_VALUE = 2;


    public final int getNumber() { return value; }

    public static eMESSAGE_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_TEXT_MSG_PRO;
        case 1: return EN_AUDIO_MSG_PRO;
        case 2: return EN_VIDEO_MSG_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eMESSAGE_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eMESSAGE_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eMESSAGE_TYPE_PRO>() {
            public eMESSAGE_TYPE_PRO findValueByNumber(int number) {
              return eMESSAGE_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(19);
    }

    private static final eMESSAGE_TYPE_PRO[] VALUES = values();

    public static eMESSAGE_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eMESSAGE_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eMESSAGE_TYPE_PRO)
  }

  /**
   * Protobuf enum {@code ePAGE_TYPE_PRO}
   *
   * <pre>
   *翻页类型
   * </pre>
   */
  public enum ePAGE_TYPE_PRO
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EN_PAGE_NEW_PRO = 0;</code>
     *
     * <pre>
     *获取新的
     * </pre>
     */
    EN_PAGE_NEW_PRO(0, 0),
    /**
     * <code>EN_PAGE_OLD_PRO = 1;</code>
     *
     * <pre>
     *获取旧的
     * </pre>
     */
    EN_PAGE_OLD_PRO(1, 1),
    ;

    /**
     * <code>EN_PAGE_NEW_PRO = 0;</code>
     *
     * <pre>
     *获取新的
     * </pre>
     */
    public static final int EN_PAGE_NEW_PRO_VALUE = 0;
    /**
     * <code>EN_PAGE_OLD_PRO = 1;</code>
     *
     * <pre>
     *获取旧的
     * </pre>
     */
    public static final int EN_PAGE_OLD_PRO_VALUE = 1;


    public final int getNumber() { return value; }

    public static ePAGE_TYPE_PRO valueOf(int value) {
      switch (value) {
        case 0: return EN_PAGE_NEW_PRO;
        case 1: return EN_PAGE_OLD_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ePAGE_TYPE_PRO>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ePAGE_TYPE_PRO>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ePAGE_TYPE_PRO>() {
            public ePAGE_TYPE_PRO findValueByNumber(int number) {
              return ePAGE_TYPE_PRO.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return EnumPro.getDescriptor().getEnumTypes().get(20);
    }

    private static final ePAGE_TYPE_PRO[] VALUES = values();

    public static ePAGE_TYPE_PRO valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ePAGE_TYPE_PRO(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ePAGE_TYPE_PRO)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010enum.pro*?\n\reMSG_OPER_PRO\022\016\n\nEN_ADD_PR" +
      "O\020\000\022\016\n\nEN_DEL_PRO\020\001\022\016\n\nEN_MOD_PRO\020\002*@\n\016e" +
      "USER_ROLE_PRO\022\026\n\022EN_ROLE_NORMAL_PRO\020\000\022\026\n" +
      "\022EN_ROLE_MANGER_PRO\020\001*5\n\reNET_TYPE_PRO\022\021" +
      "\n\rEN_NETTCP_PRO\020\000\022\021\n\rEN_NETUDP_PRO\020\001*\216\001\n" +
      "\017eSYS_STATUS_PRO\022\035\n\031EN_SYSTEM_STATUS_IDL" +
      "E_PRO\020\000\022\037\n\033EN_SYSTEM_STATUS_NORMAL_PRO\020\001" +
      "\022\035\n\031EN_SYSTEM_STATUS_BUSY_PRO\020\002\022\034\n\030EN_SY" +
      "STEM_STATUS_DIE_PRO\020\003*o\n\020eCLIENT_TYPE_PR" +
      "O\022\024\n\020EN_CLIENT_PC_PRO\020\000\022\025\n\021EN_CLIENT_WEB",
      "_PRO\020\001\022\027\n\023EN_CLIENT_PHONE_PRO\020\002\022\025\n\021EN_CL" +
      "IENT_PAD_PRO\020\003*\224\001\n\021eACCOUN_TTYPE_PRO\022\031\n\025" +
      "EN_ACCOUNT_USERID_PRO\020\000\022\030\n\024EN_ACCOUNT_EM" +
      "AIL_PRO\020\001\022\030\n\024EN_ACCOUNT_PHONE_PRO\020\002\022\031\n\025E" +
      "N_ACCOUNT_WEIXIN_PRO\020\003\022\025\n\021EN_ACCOUNT_QQ_" +
      "PRO\020\004*y\n\022eONLINE_STATUS_PRO\022\030\n\024EN_STATUS" +
      "_ONLINE_PRO\020\000\022\026\n\022EN_STATUS_HIDE_PRO\020\001\022\031\n" +
      "\025EN_STATUS_OFFLINE_PRO\020\002\022\026\n\022EN_STATUS_BU" +
      "SY_PRO\020\003*t\n\014ePLOICIE_PRO\022\025\n\021EN_PLOICIE_N" +
      "O_PRO\020\000\022\031\n\025EN_PLOICIE_ANSWER_PRO\020\001\022\030\n\024EN",
      "_PLOICIE_CHECK_PRO\020\002\022\030\n\024EN_PLOICIE_OTHER" +
      "_PRO\020\003*P\n\reUSER_SEX_PRO\022\023\n\017EN_USER_MEN_P" +
      "RO\020\000\022\025\n\021EN_USER_WOMEN_PRO\020\001\022\023\n\017EN_USER_M" +
      "ID_PRO\020\002*z\n\016eRECV_TYPE_PRO\022\026\n\022EN_RECV_NU" +
      "RMAL_PRO\020\000\022\031\n\025EN_RECV_ONLYCOUNT_PRO\020\001\022\034\n" +
      "\030EN_RECV_ONLYOPENROOM_PRO\020\002\022\027\n\023EN_RECV_R" +
      "EJUEST_PRO\020\003*n\n\030eIDENTITY_CHECK_TYPE_PRO" +
      "\022\032\n\026EN_IDENTITY_ENBALE_PRO\020\000\022\031\n\025EN_IDENT" +
      "ITY_CHECK_PRO\020\001\022\033\n\027EN_IDENTITY_DISABLE_P" +
      "RO\020\002*\221\002\n\024eROLE_LEVEL_TYPE_PRO\022\027\n\023EN_ROLE",
      "_LEVEL_1_PRO\020\000\022\027\n\023EN_ROLE_LEVEL_2_PRO\020\001\022" +
      "\027\n\023EN_ROLE_LEVEL_3_PRO\020\002\022\027\n\023EN_ROLE_LEVE" +
      "L_4_PRO\020\003\022\027\n\023EN_ROLE_LEVEL_5_PRO\020\004\022\027\n\023EN" +
      "_ROLE_LEVEL_6_PRO\020\005\022\027\n\023EN_ROLE_LEVEL_7_P" +
      "RO\020\006\022\027\n\023EN_ROLE_LEVEL_8_PRO\020\007\022\027\n\023EN_ROLE" +
      "_LEVEL_9_PRO\020\010\022\030\n\024EN_ROLE_LEVEL_10_PRO\020\t" +
      "*u\n\023eAGE_RANGE_TYPE_PRO\022\022\n\016EN_ALL_AGE_PR" +
      "O\020\000\022\021\n\rEN_16TO22_PRO\020\001\022\021\n\rEN_23TO30_PRO\020" +
      "\002\022\021\n\rEN_31TO40_PRO\020\003\022\021\n\rEN_OVER41_PRO\020\004*" +
      "\252\001\n\reURL_TYPE_PRO\022\027\n\023EN_URL_REGISTER_PRO",
      "\020\000\022\030\n\024EN_URL_FORGETPWD_PRO\020\001\022\032\n\026EN_URL_M" +
      "ODMOVIBILE_PRO\020\002\022\027\n\023EN_URL_MODEMAIL_PRO\020" +
      "\003\022\032\n\026EN_URL_MODUSERINFO_PRO\020\004\022\025\n\021EN_URL_" +
      "MODPWD_PRO\020\005*\346\016\n\017eOPERRESULT_PRO\022\026\n\022E_OP" +
      "ER_SUCCESS_PRO\020\000\022\031\n\025E_OPER_AUTHFAILER_PR" +
      "O\020\001\022\031\n\025E_OPER_NOAUTHINFO_PRO\020\002\022\033\n\027E_OPER" +
      "_USERORPASSWD_PRO\020\003\022\033\n\027E_OPER_USERNOTEXI" +
      "ST_PRO\020\004\022\034\n\030E_OPER_REJEST_ADDREQ_PRO\020\005\022\031" +
      "\n\025E_OPER_ERRORPARAM_PRO\020\006\022\030\n\024E_OPER_LINK" +
      "ERROR_PRO\020\007\022\032\n\026E_OPER_CGINOMEMORY_PRO\020\010\022",
      "\034\n\030E_OPER_DATABASEERROR_PRO\020\t\022\035\n\031E_OPER_" +
      "PLOICIENOEXIST_PRO\020\n\022 \n\034E_OPER_EMPTY_PLO" +
      "ICIEINFO_PRO\020\013\022\035\n\031E_OPER_PLOICIENOERROR_" +
      "PRO\020\014\022\032\n\026E_OPER_NOOFFLINMSG_PRO\020\r\022\032\n\026E_O" +
      "PER_SERVICEBUSY_PRO\020\016\022\035\n\031E_OPER_ROOMNOTH" +
      "ERUSER_PRO\020\017\022\032\n\026E_OPER_ROOMNOEXIST_PRO\020\020" +
      "\022\037\n\033E_OPER_MODROOMALIASFAIL_PRO\020\021\022\035\n\031E_O" +
      "PER_ROOMNOTMANAGER_PRO\020\022\022!\n\035E_OPER_SETMA" +
      "NAGERONLYHOST_PRO\020\023\022!\n\035E_OPER_ROOMHAVEMA" +
      "XMANAGER_PRO\020\024\022\033\n\027E_OPER_ALREADYLOGIN_PR",
      "O\020\025\022\036\n\032E_OPER_SYS_CATCH_ERROR_PRO\020\026\022\034\n\030E" +
      "_OPER_ERROR_DBADMIN_PRO\020\027\022\037\n\033E_OPER_GETR" +
      "ESULT_ISNULL_PRO\020\030\022\034\n\030E_OPER_OVERROOMCOU" +
      "NT_PRO\020\031\022\027\n\023E_OPER_NOTLOGIN_PRO\020\032\022\035\n\031E_O" +
      "PER_OPERTERMINATED_PRO\020\033\022\035\n\031E_OPER_CLIEN" +
      "TVERERROR_PRO\020\034\022\036\n\032E_OPER_HOSTREJECTLEAV" +
      "E_PRO\020\035\022\033\n\027E_OPER_ONLYHOSTOPER_PRO\020\036\022\037\n\033" +
      "E_OPER_DB_ALLOC_FAILURE_PRO\020(\022\036\n\032E_OPER_" +
      "DB_DBCONN_ERROR_PRO\020)\022\"\n\036E_OPER_DB_SQLCO" +
      "NTENT_ERROR_PRO\020*\022\037\n\033E_OPER_DB_EXECSQL_E",
      "RROR_PRO\020+\022\035\n\031E_OPER_DB_SPROC_ERROR_PRO\020" +
      ",\022 \n\034E_OPER_DB_EXECPORC_ERROR_PRO\020-\022\037\n\033E" +
      "_OPER_DB_INVALID_PARAM_PRO\020.\022#\n\037E_OPER_D" +
      "B_FETCHRESULT_ERROR_PRO\020/\022\036\n\032E_OPER_DB_U" +
      "SERORPASSWD_PRO\0202\022\036\n\032E_OPER_DB_USERNO_ER" +
      "ROR_PRO\0203\022 \n\034E_OPER_DB_ADMIN_NOTEXIST_PR" +
      "O\0204\022\031\n\025E_OPER_DB_NOADMIN_PRO\0205\022!\n\035E_OPER" +
      "_DB_POLICIE_FAILURE_PRO\0206\022 \n\034E_OPER_DB_E" +
      "MAIL_NOTEXIST_PRO\0207\022\037\n\033E_OPER_DB_KEYWORD" +
      "_EXIST_PRO\0208\022\037\n\033E_OPER_DB_LOAD_MODETYPE_",
      "PRO\0209\022\035\n\031E_OPER_DB_NOT_FRIENDS_PRO\020:\022\037\n\033" +
      "E_OPER_DB_NOT_USERGROUP_PRO\020;\022\036\n\032E_OPER_" +
      "DB_MAX_ROOMMBMS_PRO\020<\022\035\n\031E_OPER_DB_ACTIV" +
      "E_TYPE_PRO\020=\022 \n\034E_OPER_DB_ACCOUNT_ACTIVE" +
      "_PRO\020>\022\036\n\032E_OPER_DB_MOBILE_EXIST_PRO\020?\022\035" +
      "\n\031E_OPER_DB_EMAIL_EXIST_PRO\020@\022\037\n\033E_OPER_" +
      "DB_REGISTER_TYPE_PRO\020A\022\037\n\033E_OPER_DB_EXIS" +
      "T_FRIENDS_PRO\020B\022\037\n\033E_OPER_DB_USERID_ISUS" +
      "ED_PRO\020C\022\037\n\033E_OPER_DB_GETWAY_ISUSED_PRO\020" +
      "D\022\037\n\033E_OPER_DB_USER_HADROOMS_PRO\020E\022!\n\035E_",
      "OPER_DB_USERINFO_REJECT_PRO\020F*s\n\017eLOGIN_" +
      "TYPE_PRO\022\023\n\017EN_LOGIN_ID_PRO\020\000\022\026\n\022EN_LOGI" +
      "N_EMAIL_PRO\020\001\022\026\n\022EN_LOGIN_PHONE_PRO\020\002\022\033\n" +
      "\027EN_LOGIN_PHONE_CODE_PRO\020\003*\212\001\n\teNEWS_PRO" +
      "\022\030\n\024EN_NEWS_ACCURATE_PRO\020\000\022\027\n\023EN_NEWS_BI" +
      "OTECH_PRO\020\001\022\026\n\022EN_NEWS_HEALTH_PRO\020\002\022\033\n\027E" +
      "N_NEWS_NCD_CONTRAL_PRO\020\003\022\025\n\021EN_NEWS_OTHE" +
      "R_PRO\020\004*J\n\020eSERVER_TYPE_PRO\022\032\n\026EN_SERVER" +
      "_TYPE_CMD_PRO\020\000\022\032\n\026EN_SERVER_TYPE_FTP_PR" +
      "O\020\001*z\n\027eDOCTOR_SPECIA_TYPE_PRO\022\025\n\021EN_ALL",
      "_SPECIA_PRO\020\000\022\020\n\014EN_ERDUO_PRO\020\001\022\021\n\rEN_YA" +
      "NJIN_PRO\020\002\022\022\n\016EN_HOULONG_PRO\020\003\022\017\n\013EN_BIZ" +
      "I_PRO\020\004*T\n\021eMESSAGE_TYPE_PRO\022\023\n\017EN_TEXT_" +
      "MSG_PRO\020\000\022\024\n\020EN_AUDIO_MSG_PRO\020\001\022\024\n\020EN_VI" +
      "DEO_MSG_PRO\020\002*:\n\016ePAGE_TYPE_PRO\022\023\n\017EN_PA" +
      "GE_NEW_PRO\020\000\022\023\n\017EN_PAGE_OLD_PRO\020\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
